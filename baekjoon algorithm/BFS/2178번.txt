#include<iostream>
#include<queue>
#include<algorithm>
using namespace std;

int board[101][101];
int visit[26][26];

vector<int> temp;
int dx[4] = {1,0,-1,0};
int dy[4] = { 0,1,0,-1 };

int main(){
	int n;
	int m;
	string s;
	cin >> n>>m;
	for (int i = 0; i < n; i++) {
		cin >> s;
			for (int j = 0; j < m; j++) {
				 board[i][j]=s[j]-'0';
			}
		
	}
	queue <pair<int, int>> Q;
	visit[0][0] = 1;
	Q.push({ 0,0 });
	while (!Q.empty()) {
		pair<int, int> cur = Q.front();
		Q.pop();

		for (int i = 0; i < 4; i++) {
			int nx = cur.first + dx[i];
			int ny = cur.second + dy[i];

			if (nx < 0 || nx >= n || ny < 0 || ny >= m) continue;
			if (visit[nx][ny] || board[nx][ny] == 0) continue;

			visit[nx][ny] = 1;
			Q.push({ nx,ny });
			board[nx][ny] = board[cur.first][cur.second] + 1;
		}
	}

	cout << board[n - 1][m - 1];

}