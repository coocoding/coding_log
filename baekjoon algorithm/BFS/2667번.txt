#include<iostream>
#include<queue>
#include<algorithm>
using namespace std;

int board[26][26];
int visit[26][26];

vector<int> temp;
int dx[4] = {1,0,-1,0};
int dy[4] = { 0,1,0,-1 };

int main(){
	int n;
	string s;
	cin >> n;
	for (int i = 0; i < n; i++) {
		cin >> s;
			for (int j = 0; j < n; j++) {
				 board[i][j]=s[j]-'0';
			}
		
	}
	int num = 0;
	for (int i = 0; i<n; i++) {
		for (int j = 0; j < n; j++) {

			if (visit[i][j] || board[i][j] == 0) continue;
				num++;
				queue <pair<int, int>> Q;
				visit[i][j] = 1;
				Q.push({ i,j });
			
				int area = 0;
				while (!Q.empty()) {
					area++;
					auto cur = Q.front();
					Q.pop();
					for (int i = 0; i < 4; i++) {
						int nx = cur.first + dx[i];
						int ny = cur.second + dy[i];
						if (nx<0 || nx>=n || ny<0 || ny>=n) continue;
						if (visit[nx][ny]||board[nx][ny]!=1) continue;

						visit[nx][ny] = 1;
						Q.push({ nx,ny });
					}
				}
				temp.push_back(area);
			
		}
	}
	sort(temp.begin(), temp.end());
	cout << num << endl;
	for (int i = 0; i<temp.size(); i++) {
		cout << temp[i] << endl;
	}


}