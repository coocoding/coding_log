#include<iostream>
#include<queue>
using namespace std;

vector<int> v[1001];
int vis[1001];

void bfs(int n1) {
	queue<int> q;
	q.push(n1);
	vis[n1] = 1;
	while (!q.empty()) {
		int cur = q.front();
		q.pop();
		for (int i = 0; i < v[cur].size(); i++) {
			if (!vis[v[cur][i]]) {
				vis[v[cur][i]] = 1;
				q.push(v[cur][i]);
			}
				
		}

	}
	
}

int main() {
	
	int n, m;
	cin >> n >> m;
	for (int i = 0; i < m; i++) {
		int num1, num2;
		cin >> num1 >> num2;
		v[num1].push_back(num2);
		v[num2].push_back(num1);
	}
	int cnt = 0;
	for (int i = 1; i <= n; i++) {
		if (!vis[i]) {
			bfs(i);
			cnt++;
		}
	}
	cout << cnt;
}