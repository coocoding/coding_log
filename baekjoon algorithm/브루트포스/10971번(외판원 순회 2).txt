#include<iostream>
using namespace std;

bool isSelected[11];
int use[11];
int price[11][11];
int n;
int city[11];
long long answer = 100000000000000000;
void cal() {
	long long sum = 0;
	for (int i = 0; i < n - 1; i++) {
        //길이 없는 경우를 처리해줘야 함 1
		if (price[use[i]][use[i + 1]] == 0) return;
		sum += price[use[i]][use[i + 1]];
	}
    //길이 없는 경우를 처리해줘야 함 2
	if (price[use[n - 1]][use[0]] == 0) return;
	sum += price[use[n-1]][use[0]];
	answer = min(answer, sum);
}
void dfs(int cnt) {
	if (cnt == n) {
		cal();
		return;
	}
	for (int i = 0; i < n; i++) {
		if (isSelected[i]) continue;
		isSelected[i] = true;
		use[cnt] = city[i];
		dfs(cnt + 1);
		isSelected[i] = false;
	}
}
int main() {
	cin >> n;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			cin >> price[i][j];
		}
	}
	for (int i = 0; i < n; i++)
		city[i] = i;

	dfs(0);
	cout << answer;
}