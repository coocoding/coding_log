#include<iostream>
#include<vector>
using namespace std;

vector<int> num;
bool isSelected[21];
int selected[21];
int n;
int now;
int s;
int answer = 0;

bool cal() {
	int sum = selected[0];
	for (int i = 1; i < now; i++)
		sum += selected[i];
	if (sum == s) return true;
	else return false;
}
void dfs(int cnt,int pos) {
	if (cnt == now) {
		if (cal()) {;
			answer++;
		}
		return;
	}
	for (int i = pos; i < n; i++) {
		if (isSelected[i]) continue;
		isSelected[i] = true;
		selected[cnt] = num[i];
		dfs(cnt + 1,i+1);
		isSelected[i] = false;
	}
}
int main(){
	cin >> n >> s;
	for (int i = 0; i < n; i++) {
		int temp;
		cin >> temp;
		num.push_back(temp);
	}

	for (int i = 0; i < n; i++) {
		now = i+1;
		dfs(0,0);
	}

	cout << answer;

}