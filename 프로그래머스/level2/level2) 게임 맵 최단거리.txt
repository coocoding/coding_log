#include<vector>
#include<queue>
using namespace std;

int dx[]={0,0,-1,1};
int dy[]={1,-1,0,0};
    int dist[100][100];   

int solution(vector<vector<int> > maps)
{
    int n=maps.size();
    int m=maps[0].size();
    int answer = 0;


    queue<pair<int,int>> Q;
    dist[0][0]=1;
    Q.push({0,0});
    while(!Q.empty()){
        auto cur=Q.front();
        Q.pop();
        for(int dir=0;dir<4;dir++){
            int nx=cur.first+dx[dir];
            int ny=cur.second+dy[dir];
            
            if(nx<0||ny<0||nx>=n||ny>=m) continue;
            if(dist[nx][ny]>0||maps[nx][ny]==0) continue;
            
            dist[nx][ny]=dist[cur.first][cur.second]+1;
            Q.push({nx,ny});
        }
    }
     answer=dist[n-1][m-1];
    if(dist[n-1][m-1]==0) answer=-1;
   
    return answer;
}